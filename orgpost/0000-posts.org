#+HUGO_BASE_DIR: ../
#+SEQ_TODO: TODO DRAFT DONE
#+PROPERTY: header-args :eval no
#+OPTIONS: author:nil

* INBOX

** DONE JavaScript —— this 绑定                           :JavaScript:@计算机:
   CLOSED: [2017-11-14 Tue 14:39]
   :PROPERTIES:
   :EXPORT_FILE_NAME: javascript-this
   :END:

Google 搜索出来的两个不错的链接：

- [[https://jeffjade.com/2015/08/03/2015-08-03-javascript-this/][JavaScript 之 this 详解 | 晚晴幽草轩]]
- [[https://segmentfault.com/a/1190000003046071][JS 中 this 关键字详解 - JSer - SegmentFault]]


我是先阅读的 [[https://github.com/getify/You-Dont-Know-JS/blob/master/this%20&%20object%20prototypes/README.md#you-dont-know-js-this--object-prototypes][You-Dont-Know-JS: this & Object Prototypes]] 。再回过头看上面的那两篇文章，我觉得他们讲解的太复杂了，而 《You-Dont-Know-JS》 就归纳的非常好。

<!--more-->

以下是总结笔记：

JS 中的 =this= 总是指向一个对象 (Object)，这个对象是基于函数运行时 *动态绑定* 的。要判断 =this= 的绑定对象，首先找到这个函数的直接调用位置，然后应用下面四条规则来判断：

1. （new 绑定）由 =new= 调用？绑定到新创建的对象。
2. （强制绑定）由 =call= 或者 =apply= （或者 =bind= ）调用？绑定到指定的对象。
3. （隐式绑定）由上下文对象调用？绑定到那个上下文对象。
4. （默认绑定）在严格模式下绑定到 =undefined= ，否则绑定到全局对象。

例外，ES6 中的箭头函数会继承外层函数调用的 =this= 绑定。（和 ES6 之前代码中的 ~self = this~ 机制一样）

*** 默认绑定
#+BEGIN_SRC javascript
function foo() {
	console.log( this.a );
}

var a = 2;

foo(); // 输出 2
// 绑定到全局对象 a， 如果是严格模式，绑定到 undefined
#+END_SRC

*** 隐式绑定
#+BEGIN_SRC javascript
function foo() {
	console.log( this.a );
}

var obj = {
	a: 2,
	foo: foo
};

obj.foo(); // 输出 2
// 由对象 obj 调用，绑定到 obj
#+END_SRC

*** 注意：隐式绑定的丢失问题
#+BEGIN_SRC js
function foo() {
	console.log( this.a );
}

var obj = {
	a: 2,
	foo: foo
};

var bar = obj.foo; // 注意这个引用！

var a = "oops, global"; // 全局对象 a

bar(); // 输出： "oops, global" 绑定丢失！

setTimeout( obj.foo, 100 ); // 输出： "oops, global" 绑定丢失！
#+END_SRC

*** 强制绑定： apply, call, bind
#+BEGIN_SRC js
function foo() {
	console.log( this.a );
}

var obj = {
	a: 2
};

var bar = function() {
	foo.call( obj ); // 将 foo 的 this 强制绑定到对象 obj
};

bar(); // 输出：2
setTimeout( bar, 100 ); // 输出： 2

// 强制绑定的对象无法被覆盖
bar.call( window ); // 2
#+END_SRC

*** new 绑定
#+BEGIN_SRC js
function foo(a) {
	this.a = a;
}

var bar = new foo( 2 ); // 使用 new 绑定到对象 bar
console.log( bar.a ); // 输出 2
#+END_SRC


** DONE 维特根斯坦的《战时笔记》           :@阅读:note:维特根斯坦:哲学:思考:
   CLOSED: [2018-02-09 Fri 21:53]
   :PROPERTIES:
   :EXPORT_FILE_NAME: wartime-notes
   :END:
这本书是维特根斯坦在 1914年 至 1917年 一战期间当兵时所写的笔记。这份笔记包含两部分，一部分是私人日记，一部分是哲学笔记。他出身富贵人家，又有很高的学识，完全可以不去服兵役，但他还是去了，这是为什么？那年他 25 岁，与我的年龄相仿，我很好奇他的所思所想，并且窥探一个「天才」的私人日记会是一件很有趣的事儿。
   
<!--more-->

*** 又过得非常感性了，几乎每天都手淫
他在私人日记中经常提到的两件事，手淫和工作。今天又感性了，或者，直接点就是今天又手淫了，或者今天工作了多久。工作，指的是对逻辑问题的思考。他即便身在战场，每天听着炮火声，也在不断的思考学问。

也许是因为精神上的压力？而手淫则是放松的方式？不管怎么说，拥有高智商，也不一定就能够完全的自控。

他在部队里是孤独的，被排斥的。他在日记中不断提到，周围都是些愚蠢的野蛮人。在那样的环境下，他只能够给曾经的朋友写信交流思想。把托尔斯泰的一句话，」一个人从肉体上来说是软弱无力的，但是经由精神他成为自由的人「，当作内在的精神支柱。

*** 关于记录与思考
这三年间，他不断的在思考逻辑哲学的问题，并且做了大量的记录和笔记，这也成就了他之后创作出《逻辑哲学论》这本书。长时间保持热情、深入钻研，还有一点，大量的记录，没有一个天才是平白无故就能创作出杰作的，必定是投入了常人所不能投入的努力。如果非要说是天才的话，那我以为，就是他找到了他一生所要去追随的事业。

- 你有热衷的事业吗？
- 你有每天都为它思考、并且努力工作吗？
- 即便遇到挫折，你有反省吗？


** DONE 开源实践：写在 Jane 发布之后             :@杂文:Jane:Hugo:开源:练习:
   CLOSED: [2018-03-11 Sun 21:30]
   :PROPERTIES:
   :EXPORT_FILE_NAME: hugo-theme-jane-publish
   :END:

本周我发布了一个 [[https://gohugo.io/][Hugo]] 主题 [[https://github.com/xianmin/hugo-theme-jane][Jane]] ，Jane 克隆自 [[https://github.com/olOwOlo/hugo-theme-even][hugo-theme-even]] ，大体功能基本继承自 Even 。起先，我只是使用 Hugo 来发布博文，并且选择使用 Even 作为我的博客主题。后来觉得 Even 这个主题的样式我个人不是很喜欢，就自己动手改了。改动的地方多了，外观上基本上已经不是原来的 Even 了，就想着也许自己可以基于它单独创建一个主题，顺便练练手，于是就有了 Jane 这个项目。当我在四天前向 Hugo 官方提交这个主题之后，意外地获得了官方的肯定以及推荐[fn:1]。

<!--more-->

这是我第一次认真去做的开源项目。尽管说，5年多以前我就开始使用 git ，有了 github 账号，但从未提过一个 issue ，也未提交过一次 PR ，就像是一个在论坛长期潜水的人。英文写作能力不行、对迈开第一步有些许畏惧、没找到合适的切入点等等，这些都可以当作理由，而我跨出这一步，居然用了5年的时间。毫无疑问，这得感谢 Even 的作者，感谢开源世界。

在 Jane 被官方收录到主题仓库的第二天，就得到了几个 Star，并且收到了一位使用者的反馈[fn:2]，对于我这个项目维护者而言，无疑是一种无形的鼓励。如前文所说，Jane 最初只是按我个人的需求进行的改造。所改的内容，主要是增强读者的阅读体验，然后在此基础上，增强其它的一些功能，比如说标签页中的标签云、分类页更好的展示、多国语言支持等。由于我个人水平有限，也非专业的网站设计人员，它依然有很多可以改进的地方。如果看到这篇文章的你正巧也是 Jane 的使用者，欢迎给我提出宝贵的建议，或者像我一样自己动手修改。

这次实践对于我个人是一个好的开始。我开始使用 gitflow 来规范开发流程，开始规范自己的 commit 内容，开始认真对待文档，开始认真做一个项目。磨了几年的刀，终于开始砍柴了。


[fn:1] [[https://github.com/gohugoio/hugoThemes/issues/340][New Theme: Jane · Issue #340 · gohugoio/hugoThemes]]

[fn:2] [[https://github.com/xianmin/hugo-theme-jane/issues/1][Issue #1 · xianmin/hugo-theme-jane]]


** DONE 笔记：有关开源项目                                :@计算机:开源:笔记:
   CLOSED: [2018-03-27 Tue 15:47]
   :PROPERTIES:
   :EXPORT_FILE_NAME: note-opensource-project
   :END:

 以下内容是关于怎样参与到开源项目中的一些笔记，基本上摘自网络。


*** 参考链接
  - [[https://www.phodal.com/blog/how-to-build-a-opensource-project/][开源之美：开源软件开发流程 - Phodal | Phodal - A Growth Engineer]]
  - [[https://juejin.im/post/59f98a196fb9a045132a03ed][零起点的开源社区贡献指南 - 掘金]]
  - [[http://www.ruanyifeng.com/blog/2016/01/commit_message_change_log.html][Commit message 和 Change log 编写指南 - 阮一峰的网络日志]]
  - [[https://www.git-tower.com/learn/git/ebook/cn/command-line/advanced-topics/git-flow][git-flow 的工作流程]]
 
 <!--more-->

*** 加入开源项目可以做的事儿
 - 入门：翻译文档、报告 BUG
 - 提 Issue
   - 报告 Bug 与提问
   - 提出并讨论新特性
   - 设定 Todo 目标
 - 提 Pull Request
   - 修复 bug
   - 实现新特性
   - 优化性能
   - 例行更新（如文档、依赖版本等）

*** 常用英文表达方式

 *吐槽代码：*
 - 表达 API 笨重不好用，可以说 =heavy to work with=
 - 表达模块结构不好，可以说 =not intuitive=
 - 表达处理方式太粗暴，可以说 =overkill=
 - 表达逻辑可能有漏洞，可以说 =leaky=
 - 表达要引入的东西太多，可以说 =aggressive=

 *表达观点：*
 - =I think= 有点儿武断
 - 可以用 =In my (humble) opinion=
 - 补充一个 =Not sure, maybe missing something=
 - 用 =To my knowledge= 或者 =For me=

*** commit 格式规范
 #+BEGIN_SRC 
 <type>(<scope>): <subject>
 // 空一行
 <body>
 // 空一行
 <footer>
 #+END_SRC

 *第一部分为 HEADER ：*

 - =<type>= 说明 commit 的类别：
   - feat：新功能（feature）
   - fix：修补bug
   - docs：文档（documentation）
   - style： 格式（不影响代码运行的变动）
   - refactor：重构（即不是新增功能，也不是修改bug的代码变动）
   - test：增加测试
   - chore：构建过程或辅助工具的变动
 - =<scope>= 说明 commit 影响的范围
 - =<subject>= 是 commit 目的的简短描述，可加入 Issue 的编号如 =#11=

 *第二部分为 Body ：*
 Body 部分是对本次 commit 的详细描述，可以分成多行。下面是一个范例。

 *最后部分为 Footer：*
 1. 不兼容变动。以 =BREAKING CHANGE= 开头，后面是对变动的描述、以及变动理由和迁移方法。
 2. 关闭 Issue。如， =Closes #123, #245, #992= ，一次性关闭多个 issue。

 *特殊情况 Revert ：*

 如果当前 commit 用于撤销以前的 commit，则必须以 =revert:= 开头，后面跟着被撤销 Commit 的 Header。

*** 生成 CHANGE LOG
 [[https://github.com/conventional-changelog/conventional-changelog][conventional-changelog/conventional-changelog: Generate a changelog from git metadata.]]

 按照规范编写 commit 最大的好处就是自动化生成 Change Log 。


*** git-flow 工作流程
 [[https://github.com/petervanderdoes/gitflow-avh][petervanderdoes/gitflow-avh: AVH Edition of the git extensions to provide high-level repository operations for Vincent Driessen's branching model]]



** DONE 糟糕的项目管理新手                                           :@随笔:git:
   CLOSED: [2018-04-03 Tue 15:40]
   :PROPERTIES:
   :EXPORT_FILE_NAME: I-am-a-bad-project-manager
   :END:

最近， =hugo-theme-jane= 收到了几位朋友的 PR ，我作为这个项目的管理者，在处理 PR 上遇到了问题：有个别 PR 比较简单，我就直接在 github 后台操作合并，然后 =git pull= 到本地。我想的是本地 master 直接从远程仓库抓取到最新版，但奇怪的是居然有一个合并请求，并且多了一个合并的 commit 。

<!--more-->

如图：

[[~/Dropbox/Write/blog/static/image/other/bad-project-manager-00.png]]

[[~/Dropbox/Write/blog/static/image/other/bad-project-manager-01.png]]

本地的 master 和远程的 master 不一样了，当时也不知道为什么会这样，我只是想把两个仓库进行同步啊。算了，先更新再说吧，于是就把（没搞清楚为什么）多了一次合并 commit 的本地 master 提交到了 origin/master 。尽管说最终的代码没什么问题，但这个 commit 历史总觉得有些别扭，完全不是自己预想的那样。

直到看到了这篇文章： [[https://longair.net/blog/2009/04/16/git-fetch-and-merge/][git: fetch and merge, don’t pull | Mark's Blog]] 。我才意识到自己犯的错误在哪里……我对 git 的分支、以及合并的概念只是理解了一些皮毛，要好好补课了。

** DONE 恢复锻炼，站桩日志                                 :@随笔:锻炼:站桩:
   CLOSED: [2018-04-07 Sat 15:35]
   :PROPERTIES:
   :EXPORT_FILE_NAME: exercise01
   :END:

每次都是这样，身体觉得不太舒服了，才想到要锻炼。最近一个多月每天差不多有十几个小时坐在电脑前，导致这些天腰部又感到酸痛了。有几个月都没锻炼了吧？上一次站桩还是在 1月22日。从今天开始恢复站桩，制定一个连续 100 天的站桩计划。

<!--more-->

上周就在想着要恢复锻炼，但始终没下定决心。今天下午坐在电脑前没多久，腰部又开始酸痛，照这样下去身体肯定会出问题的，于是直接铁了心去站桩，站了半个小时。这半个小时总体不算难熬，只是呼吸数到 155 次左右的时候中断了，等反应过来已经忘了数到哪儿了。臂膀依然坚持不住，呼吸大概数到 122 次的时候放了下来。站完后，膝盖似乎比此前任何一次站完桩的感觉更疼，毕竟这么久都没有锻炼了，而且这一个多月一直都在电脑前坐着，连走动都很少。

身体是革命的本钱，不要觉得现在还年轻，身体没什么大的状况，据说，很多人 30 岁之后身体渐渐都开始出现问题。如果这个时候不多加注意，再过几年想要恢复更好的身体，也许就要付出更大的代价了。

道理是简单易懂的，关键在于实践与坚持。从今天开始，恢复锻炼，连续 100 天站桩。

** DONE 浅谈「用 git submodule 还是 git subtree」？            :@计算机:git:
   CLOSED: [2018-04-16 Mon 23:14]
   :PROPERTIES:
   :EXPORT_FILE_NAME: git-submodule
   :END:

因为有用 =git= 管理 *子项目* 的需要，我在网上找到了 =submodule= 和 =subtree= 这两种方法。奇怪的是，有好几篇文章提到用 =subtree= 替代 =submodule= 。

比如这两篇： 

- [[https://tech.youzan.com/git-subtree/][用 Git Subtree 在多个 Git 项目间双向同步子项目，附简明使用手册 - Delai - 有赞技术团队]] 
- [[https://www.atlassian.com/blog/git/alternatives-to-git-submodule-git-subtree][Git subtree: the alternative to Git submodule]]

这两个链接分别都出现在 Google 搜索中文和搜索英文时的首页上。因此，我最开始使用的是 subtree，以为 subtree 就是目前的主流方案，并且是 submodule 的替代方案。直到前些日子我改用了 submodule 才发现，submodule 才是真正我想用的。

<!--more-->

这两者都可以解决类似的管理子项目的问题，但两者的管理方式有比较大的区别，并且两者都各自有各自的优缺点。比如说，这篇文章 [[https://blog.devtang.com/2013/05/08/git-submodule-issues/][Git submodule的坑 | 唐巧的博客]] 谈到了 submodule 遇到的坑，而这篇文章 [[http://efe.baidu.com/blog/git-submodule-vs-git-subtree/][git submoudle vs git subtree | EFE Tech]] 则谈到了使用 subtree 的过程中遇到的坑。因此个人觉得很难讲谁替代谁、谁比谁更好。

有人对 submodule 和 subtree 的区别做的一个总结还是挺形象的： *submodule is link; subtree is copy* 。

当然了，由于我个人的经验有限，我说的也许都是错的，但是别人说的也不一定都是对的啊。工具嘛，适合自己，又能方便的解决问题，就可以了。


** DONE 从丽江到重庆                                       :@随笔:丽江:重庆:
   CLOSED: [2018-04-22 Sun 21:11]
   :PROPERTIES:
   :EXPORT_FILE_NAME: from-lijing-to-chongqing
   :END:
[[~/Dropbox/Write/blog/static/image/other/chongqing.jpg]]

这两年最常去的一个城市——重庆，因为她在那儿。上周又去了一趟重庆，她腹痛，在医院检查出畸胎瘤[fn:1] ，需要做手术切除，我到医院陪她。我抵达医院是手术完成后的第二天，她在病床上躺着，身上插着监护仪还有导尿管，很虚弱，什么也不能吃。手术完成的很顺利，对卵巢的伤害不是很严重。在手术前，她的父亲和医院签了协议，这个手术如果进展的不顺利，有可能需要切除卵巢，算是比较幸运，这并没有发生。她当天去的医院，当天检查出畸胎瘤，当天就做了手术，一切都发生的太突然。很遗憾，我没能第一时间陪伴在她的身边。两个人身处异地，相隔 1000 公里，距离并不可怕，可怕的是当她需要我的时候，我不能及时的出现。我还记得那晚等待她父亲回复消息——关于她手术完成的情况——那4个小时的煎熬，比预计手术时间晚了2个小时，我只能茫然的盯着手机屏幕。晚上失眠，凌晨三点多醒来，一早前往机场，飞去重庆，这一次是到医院陪她。

<!--more-->

[fn:1] [[https://zh.wikipedia.org/zh-hans/%E7%95%B8%E8%83%8E%E7%98%A4][畸胎瘤 - 维基百科，自由的百科全书]]


她腹痛的症状去年就发生过一次，那次是在丽江的医院就诊，我们当时以为是阑尾炎，结果医生也误诊成了阑尾炎，也许是因为当时我们挂的是急诊，急诊的病人较多，医生检查的不够仔细；也可能是因为我们跟医生说「她好像得了阑尾炎」误导了医生，那个疼痛的位置太接近阑尾了。不管怎样，就是误诊了。当时她只是挂了吊瓶，也还好只是挂吊瓶，她的阑尾一点问题也没有。这次复发，在重庆的医院就诊，医生让去做彩超，这才发现了问题所在。

她术后恢复的很好，第三天可以喝点粥，第四天可以吃些鱼汤之类的食物，第六天就出院了。这些天我都陪伴在她的身边，看着她的身体一天天的好转，从需要我搀扶着起身，到自己能够独立下床。她出院后，我继续陪伴了三天，然后返回丽江。



** DONE 正念日                                             :@随笔:正念:修行:
   CLOSED: [2018-05-20 Sun 20:31]
   :PROPERTIES:
   :EXPORT_FILE_NAME: Days-of-Mindfulness
   :END:

今天是正念日。早上7点的闹钟响起，起床，洗漱，煮上一锅粥，站桩半个小时，吃早饭。吃完早饭，开始收拾房间。随意乱放的衣物整理到衣柜，把脏了的衣物洗净晾晒。没用的纸盒垃圾一并丢弃。最后，用抹布把整个房间擦一遍。有的时候状态不佳、杂念丛生，打扫的过程中会感有些许烦躁，但完成整个过程，看到自己收拾整齐的房间，至少会有小小的成就感。这是我个人的修行。

<!--more-->

每周的周日是我的正念日。这是从《正念的奇迹》中得到的启发[fn:1]，每个星期选择一天用来修习正念。在这一天，我除了提醒自己要保持正念，还会刻意做一些平时不得不做，却又「不想做的、没意思的事儿」，比如，收拾房间、打扫卫生、洗衣服、给植物浇水等等。如果不刻意去做，也许我会一直拖着，拖很久，直到自己都忍受不了了，才会想到收拾，而这个拖延的过程实在让我感到焦虑。

这是一个不错的修行方式，同时也是很好的休息方式。不必着急，按照自己的节奏，把事情一样样处理好。尽管说，做事的方式理应如此，奈何每个人各有各的差异，天资秉性不同，有的人从小就培养了好习惯，直接可以进行下一步的修行。而像我这样从小就有不良习惯的，只能慢慢的刻意去改变。这又不仅仅只是习惯的问题，好的习惯只是修行的方法、工具，所追求的是要时刻保持正念。

前几天看到一篇报道[fn:2]，「冥想是否真的有作用？」（冥想与正念，尽管是两个不同的词，在我看来，所要达到的其中一个目的是相类似的，都是要个体专注于此时此刻）。尽管科学研究上没有明确的结论，表明它的作用，但它确实是个「好东西」。你只有自己试了才知道，并且尝试的方法非常简单。从我个人的经验而言，类似的修行方式，的确缓解了我的焦虑症、抑郁症。

[fn:1] [[https://book.douban.com/subject/4726852/][正念的奇迹 (豆瓣)]]
[fn:2] [[https://www.solidot.org/story?sid=56538][Solidot | 冥想是否真的有作用]]
** DONE linux 的文件管理器、命令行下，用 emacs 快速打开文件的方法 :@计算机:emacs:linux:tip:
   CLOSED: [2018-05-22 Tue 21:28]
   :PROPERTIES:
   :EXPORT_FILE_NAME: linux-emacs-quick-open-file
   :END:

首先要确认 emacs 已经启动，并且开启了 server [fn:1] 。如果使用 spacemacs ，server 默认是开启的。这样就可以使用 =emacsclient= 命令快速打开文件了。

<!--more-->

[fn:1] [[https://www.gnu.org/software/emacs/manual/html_node/emacs/Emacs-Server.html][Emacs Server - GNU Emacs Manual]]

*** 命令行下使用 emacsclient
直接添加一条 alias ：

#+BEGIN_SRC bash
alias ec="emacsclient -nq"
#+END_SRC

参数 =nq= 的含义是：

#+BEGIN_SRC code
-n, --no-wait		Don't wait for the server to return
-q, --quiet		Don't display messages on success
#+END_SRC

以后在命令行中用 emacs 打开文件，只需要敲击 =ec 文件名= 即可。

*** 在文件管理器下，右键菜单打开文件
我的方法是：

在 =~/.local/share/applications/= 目录下，添加一个 =emacs.desktop= 文件。编辑这个 =desktop= 文件：

#+BEGIN_SRC code
[Desktop Entry]
Version=1.0
Name=Edit with Emacs
GenericName=Text Editor
MimeType=text/english;text/plain;text/x-makefile;text/x-c++hdr;text/x-c++src;text/x-chdr;text/x-csrc;text/x-java;text/x-moc;text/x-pascal;text/x-tcl;text/x-tex;application/x-shellscript;text/x-c;text/x-c++;
Exec=/usr/bin/emacsclient -nq %F
Icon=emacs25
Type=Application
Terminal=false
Categories=Utility;Development;TextEditor;
Keywords=Text;Editor;
#+END_SRC

这样我们就添加了一个名为 =Edit with Emacs= 的程序，同时在文件管理器中，就可以用这个程序打开文件了。并且可以为特定的后缀，比如 =.org= 文件，设置 *默认打开程序* 为 =Edit with Emacs= 。

[[~/Dropbox/Write/blog/static/image/other/gif/linux-emacsclient-quick-open-file.gif]]



** DONE 为 hugo 站点插入豆瓣条目的 shortcode                             :@计算机:hugo:豆瓣:
   CLOSED: [2018-05-25 Fri 15:20]
   :PROPERTIES:
   :EXPORT_FILE_NAME: hugo-shortcode-douban-item
   :END:

*最终效果：*
{{< douban 9787532132263 >}}

{{< douban 1307690 >}}


代码来源： [[https://immmmm.com/bitcron-show-douban-item][Bitcron 文章内插入豆瓣条目 - 林小沐]]
<!--more-->

*** 添加 douban shortcode
创建文件 =/layouts/shortcodes/douban.html= ，代码如下：

#+BEGIN_SRC html
<div class="douban_show">
  <div id="db{{ .Get 0 }}" date-dbid="{{ .Get 0 }}" class="douban_item post-preview"></div>
</div>
#+END_SRC

*** 添加 js

#+BEGIN_SRC js
$(document).ready(function () {
    $('.douban_item').each(function () {
        var id = $(this).attr('date-dbid').toString();
        if (id.length < 9) {
            var url = "https://api.douban.com/v2/movie/subject/" + id + "?apikey=0dad551ec0f84ed02907ff5c42e8ec70";
            $.ajax({
                url: url,
                type: 'GET',
                dataType: "jsonp",
                success: function (data) {
                    var db_casts = "",
                        db_genres = "";
                    for (var i in data.casts) {
                        db_casts += data.casts[i].name + " ";
                    }
                    for (var i in data.genres) {
                        db_genres += data.genres[i] + " ";
                    }
                    var db_star = Math.ceil(data.rating.average)
                    $('#db' + id).html(
                        "<div class='post-preview--meta'><div class='post-preview--middle'><h4 class='post-preview--title'><a target='_blank' href='" +
                        data.alt + "'>《" + data.title + "》</a></h4><div class='rating'><div class='rating-star allstar" +
                        db_star + "'></div><div class='rating-average'>" + data.rating.average +
                        "</div></div><time class='post-preview--date'>导演：" + data.directors[0].name + " / 主演：" +
                        db_casts + " / 类型：" + db_genres + " / " + data.year +
                        "</time><section style='max-height:75px;overflow:hidden;' class='post-preview--excerpt'>" +
                        data.summary +
                        "</section></div></div><div class='post-preview--image' style='background-image:url(" + data.images
                        .large + ");'></div>");
                }
            });
        } else if (id.length > 9) {
            var url = "https://api.douban.com/v2/book/isbn/" + id +
                "?fields=alt,title,subtitle,rating,author,publisher,pubdate,summary,images&apikey=0dad551ec0f84ed02907ff5c42e8ec70";
            $.ajax({
                url: url,
                type: 'GET',
                dataType: 'JSONP',
                success: function (data) {
                    var db_star = Math.ceil(data.rating.average)
                    $('#db' + id).html(
                        "<div class='post-preview--meta'><div class='post-preview--middle'><h4 class='post-preview--title'><a target='_blank' href='" +
                        data.alt + "'>《" + data.title + "》" + data.subtitle +
                        "</a></h4><div class='rating'><div class='rating-star allstar" + db_star +
                        "'></div><div class='rating-average'>" + data.rating.average +
                        "</div></div><time class='post-preview--date'>" + data.author[0] + " / " + data.publisher +
                        " / " + data.pubdate +
                        "</time><section style='max-height:75px;overflow:hidden;' class='post-preview--excerpt'>" +
                        data.summary +
                        "</section></div></div><div class='post-preview--image' style='background-image:url(" + data.images
                        .large + ");'></div>");
                }
            });
        } else {
            console.log("出错" + id)
        }
    });
});
#+END_SRC

*** 添加 css
#+BEGIN_SRC css
/* douban item post-preview --------*/

.post-preview {
  max-width: 780px;
  margin: 1em auto;
  position: relative;
  display: flex;
  background: #fff;
  border-radius: 4px;
  box-shadow: 0 1px 2px rgba(0, 0, 0, .25), 0 0 1px rgba(0, 0, 0, .25);
}

.post-preview--meta {
  width: 75%;
  padding: 25px;
}

.post-preview--middle {
  line-height: 28px;
}

.post-preview--title {
  font-size: 18px;
  margin: 0;
}

.post-preview--title a {
  text-decoration: none;
}

.post-preview--date {
  font-size: 14px;
  color: #999;
}

.post-preview--excerpt {
  font-size: 14px;
  line-height: 1.825;
}

.post-preview--excerpt p {
  margin-bottom: 0;
}

.post-preview--image {
  width: 25%;
  float: right;
  background-size: cover;
  background-position: center center;
  border-top-right-radius: 2px;
  border-bottom-right-radius: 2px;
}

@media (max-width:550px) {
  .post-preview {
    width: 95%;
  }
  .post-preview--image {
    width: 40%;
  }
  .post-preview--meta {
    width: 60%;
  }
  .post-preview--excerpt {
    display: none;
  }
}

.rating {
  display: block;
  line-height: 15px;
}

.rating-star {
  display: inline-block;
  width: 75px;
  height: 15px;
  background-repeat: no-repeat;
  background-image: url(/image/douban_star.png);
  overflow: hidden;
}

.allstar10 {
  background-position: 0px 0px;
}

.allstar9 {
  background-position: 0px -15px;
}

.allstar8 {
  background-position: 0px -30px;
}

.allstar7 {
  background-position: 0px -45px;
}

.allstar6 {
  background-position: 0px -60px;
}

.allstar5 {
  background-position: 0px -75px;
}

.allstar4 {
  background-position: 0px -90px;
}

.allstar3 {
  background-position: 0px -105px;
}

.allstar2 {
  background-position: 0px -120px;
}

.allstar1 {
  background-position: 0px -135px;
}

.allstar0 {
  background-position: 0px -150px;
}

.rating-average {
  color: #777;
  display: inline-block;
  font-size: 13px;
  margin-left: 10px;
}
#+END_SRC

*注意：*  豆瓣评分五角星图片需要另外载入。

保存图片为 =/static/image/douban_star.png=

[[~/Dropbox/Write/blog/static/image/douban_star.png]]


*** 使用方法

#+BEGIN_SRC code
{{</* douban id */>}}
#+END_SRC

- 电影条目如 https://movie.douban.com/subject/26862829/ 取后面 26862829 为 id。
- 图书条目，取它的 ISBN 为 id。

*** 补充说明
关于添加 js, css 代码，一般 hugo 主题都有 =customJS= 或 =customCSS= 选项（比如我的主题），我们可以添加到其中。

我不确定有几个人需要这个 =douban shortcode= ，因此，暂时没有整合到 =hugo-theme-jane= 中，如果有人需要，欢迎在此文章下留言。

最后，感谢原创作者林小沐！

** DONE 因为贫穷的缘故                                          :@随笔:反省:
   CLOSED: [2018-07-06 Sat 21:36]
   :PROPERTIES:
   :EXPORT_FILE_NAME: because-of-poverty
   :END:

最近一个多月比较忙。店里的事情，接待客人，接待朋友，接待团队，还有办理证件。另外，和一个朋友合作，做几个微信公众号的项目，也算是开了些眼界。这种忙碌，如果换在大城市，估计算不了什么。只是过惯了在乡下自由散漫的日子，还是会觉得，哎呀，有点儿忙啊。因为贫穷的缘故吧，想着多做点事儿，能多挣些钱，钱也没挣多少，反倒更焦虑了。

<!--more-->

这一个月，基本没锻炼，没看书。有一点空闲时间，就只想和朋友喝几杯。稍不留神，又喝高了。对于我这样的穷人而言，把酒言欢，算是最大的享受了。锻炼？算了吧。看书？没那功夫。写字？心烦意乱。有时候我会去想，像斯宾诺莎那样，以「磨镜片」为生，过着清贫的生活。事实上，在这乡下地方，也算是过着清贫的生活了。奈何有太多的俗世的烦恼无法割舍，心有不甘啊，不甘于贫穷。

可是挣钱这种事，有时候也不知道是否是命运安排。在青旅见多了形形色色的人，人生的大起大落，似乎也司空见惯了。最无可奈何的是，钱没挣着，身体先垮了。这是命吗？还是自己能掌控的呢？我不知道。我相信自强不息，可似乎有些事情冥冥之中又自有天意。做好自己能掌控的事儿，比如分内的工作、学习知识、锻炼身体。其余的还是听天由命吧！


** DONE 更好的基于 github issues 的评论系统——utterances :@计算机:github:tip:blog:Hugo:
   CLOSED: [2018-07-10 Tue 14:34]
   :PROPERTIES:
   :EXPORT_FILE_NAME: utterances-comment-system
:END:

*** 背景介绍
 基于 *github issues* 的评论系统，比较流行的有 [[https://github.com/imsun/gitment][gitment]] 和 [[https://github.com/gitalk/gitalk][gitalk]] 。这两个项目我很早就注意到了，它们明显的缺陷是，当用户如果尝试登录评论，所要求的权限是很多的，因此我也一直有所顾忌，不愿授权。不授权就无法评论了吗？还真不是。我在网上搜到了这篇文章——[[https://blog.wolfogre.com/posts/security-problem-of-gitment/][Gitment 的安全性争议 | 狼煞博客]]，文中提到：

 #+BEGIN_QUOTE
 无论是在本博客还是在别的网站，如果评论系统用的是 Gitment，只要你不是百分百信任网站所有者，就尽量不要登录再留言。
 #+END_QUOTE

 这个建议很好理解，稍微有点网络安全知识的人，通常都不会轻易把自己账户的各种操作权限交给一个素不相识的人。不过，此文作者还给出了一个「不登录直接留言」的操作方法，就是直接打开 issues 页面来评论。我这么讲，对于没用过基于 *github issues* 评论系统的读者而言，估计是一头雾水，这个按上面文章的方法操作一次，你就知道是怎么一回事儿了。


*** 为什么使用 utterances ？
 以上简单讲了一下背景，下面介绍本篇文章的主角——[[https://github.com/utterance/utterances][utterances]]。

 它和 =gitment= 、 =gitalk= 有什么区别呢？

最大的区别就是 =utterances= 所需要的权限要少得多，仅限于读写特定仓库的 issues 和 comments 。至于原理，我也没有深究，有兴趣的读者可以看一看项目作者写的说明：[[https://github.com/utterance/utterances/pull/25][utterances 1.0 by jdanyow · Pull Request #25]] 。并且，仅需要给 =utterances= 授权一次，其他凡是使用 =utterances= 的站点都不必再 *额外授权* ，直接就可以评论。

 第二个区别，部署更简单。按照文档的步骤： 

1. 新建一个用于存放评论的仓库；
2. 给这个仓库部署 =utterances= 应用；
3. 将一段 *script* 代码放入你的博客。这样就可以了。


 第三个区别， =utterances= 有一个「机器人」可以自动初始化博文的 issues 评论。而 =gitment= 需要使用脚本，或者需要手动点击初始化按钮。（这个问题我是通过他人的文章了解到的，自己并没有测试考证。）

 综上， =utterances= 是一个相对而言 *更便捷* 的基于 *github issues* 的评论系统。

想试用的朋友不妨在底部评论一下吧！ :-)

另外，我已将 =utterances= 并入到博客主题 [[https://github.com/xianmin/hugo-theme-jane][hugo-theme-jane]] 中了。


** DONE linux 下，fcitx 输入法的直角引号设置    :@计算机:linux:fcitx:输入法:
   CLOSED: [2018-08-07 Tue 23:04]
   :PROPERTIES:
   :EXPORT_FILE_NAME: linux-fcitx-punc
:END:

我不确定你有没有遇到过这样的问题，输入一个双引号，它是 *前引号* 呢，还是 *后引号* 。也许是字体的缘故，我总得瞪大了眼睛才能分辨的清楚。出于好奇，我上网搜了下，还真有解决办法。最简单的办法就是使用港台的标准，使用直角引号。请看图片：

[[~/Dropbox/Write/blog/static/image/other/fcitx-punc-01.png]]

<!--more-->


*** 为什么使用直角引号
关于这个问题，知乎上有讨论，[[https://sspai.com/post/45516][这篇文章]] [fn:1] 做了总结：

[fn:1] 这是一篇不错的中文标点符号的知识普及。


#+BEGIN_QUOTE
直角引号的提倡者主要有如下理由：

其一，与冒号、分号等标点都有用于东亚文字的全角版本不同，弯引号缺少一个中文专用的版本。无论中文西文，弯引号都是同样码位上的同一对字符，其外形完全取决于字体。在中西文混排的场合，弯引号常常因为套用西文字体而显示为半角宽度，与汉字和其他中文标点差异很大，从而对排版效果产生不利影响。

其二，提倡者认为直角引号的形态与方块字更加契合。

其三，直角引号在香港、台湾和日本都是官方规范，这也为将其「进口」到简体中文世界提供了依据。
#+END_QUOTE

我个人也觉得，直角引号更容易分辨，也更美观。比如在我的浏览器下的显示如图：

{{< figure src="/image/other/fcitx-punc-02.png" title="以上是双引号" >}}

{{< figure src="/image/other/fcitx-punc-03.png" title="以上是直角引号" >}}

*** linux 下怎样输入直角引号？
如果你用的是 fcitx 输入法框架，输入直角引号的问题很容易就能解决。 [fn:2]

[fn:2] [[https://fcitx-im.org/wiki/Punctuation][Punctuation - Fcitx]]


1. 查看 =/usr/share/fcitx/data/= 文件夹下， =punc-ng.mb-zh_CN= 这个文件的内容。这是一个全局配置文件。

2. 将这个「配置文件」复制到用户目录，即 =~/.config/fcitx/data/= 目录下，进行修改：

#+BEGIN_SRC code
" 「 」
' 『 』
#+END_SRC

这样，当我们使用中文输入法时，输出的引号就是直角引号了。

由此得到的启发，我们同时还能将任意字符进行修改，比如说：中文输入法下，输入 =*= 时，得到的是 =×= 这个字符。对我个人而言， =×= 这个符号我基本上很少使用，而在使用 「markdonw」 或者 「orgmode」 标记语言时， =*= 号却是经常使用的。那么，直接在「配置文件」中，将 =* ×= 这一行删除就可以了。

题外话，为什么不直接修改 =/usr/share/fcitx/data/= 目录下的全局文件，而要放到用户目录下？这是为了更好的管理个人的 *dotfiles* ，不妨参考我的另一篇文章：[[http://www.xianmin.org/post/02-manage-dotfiles/][Linux 下，使用 Git 管理 dotfiles（配置文件）]] 。

*** 替换所有旧文章中的引号

使用 sed 命令：

#+BEGIN_SRC bash
sed -i s/“/「/g `grep -rl “ *`    # 替换前引号
sed -i s/”/」/g `grep -rl ” *`    # 替换后引号
#+END_SRC


** DONE 我的搭档 「ThinkPad X230」                   :@计算机:ThinkPad:工具:
   CLOSED: [2018-08-11 Sat 12:14]
   :PROPERTIES:
   :EXPORT_FILE_NAME: thinkpad-x230
   :END:

{{< figure src="/image/other/thinkpad-x230.jpg" title="" width="60%" class="center" >}}


最近，我的搭档 「ThinkPad X230」 的键盘出了点问题，按键偶尔会完全失灵，小红点经常失控。当机立断，我直接在淘宝买了个新的键盘换上，感觉它又重获了新生。这是我喜欢 ThinkPad 的主要原因，它太好拆了，换个键盘只要下俩螺丝，几分钟就搞定。但凡哪个部件有任何问题，我都能轻松的更换，这让我觉得它是真正属于我的，能跟随我很久。

<!--more-->

它是一台二手的笔记本电脑，是我在两年多前在淘宝上买的，因为便宜，我没记错的话，只要 1700 多。至于它的前主人是谁，不得而知。到了我这儿，我把旧电脑的硬盘给它装上，再装上两条新的 8G 内存条，就开始替我工作了。只需要重装一下驱动，都不必折腾系统。之后慢慢熟悉了使用小红点，确实比触摸板好用太多。

如果有人问我笔记本电脑有没有推荐的？我会首先推荐 ThinkPad 。要是预算有限呢，那就买台二手的吧，反正都是会用旧的。 :-)

** DONE 一位哥伦比亚作家在中国                             :@随笔:中国:对话:
   CLOSED: [2018-08-12 Sun 20:41]
   :PROPERTIES:
   :EXPORT_FILE_NAME: a-Colombian-in-China
:END:

John 是哥伦比亚人，上个月住进了我们旅舍，明天他就要搬走了。他长期带着一个宽沿帽子，六十多岁，也许是保持健身的缘故，身材很壮实，精神状态很好，在中国生活了二十几年。

<!--more-->

他是一位作家。有一天我俩在院子里相遇，随意聊了几句，他告诉我的。我在这个旅舍接待来来往往的游客，大部分时候无意去询问客人的个人信息。比如，你做什么工作？为什么到这儿来？等等之类的。但是 John 这个人让我有些好奇，他每天深居简出，你在院子里可以看到，他大部分时间都坐在窗台边的电脑桌前工作，生活极有规律。他在写作，也许以此为生。他说他写的是科学相关的内容，具体写些什么，我没有继续追问。有一天出于好奇，在网上搜了他的名字，的确有这么一位作家，并且出版过一本西班牙语的关于尼泊尔的书，除此之外就没有更多关于他的信息了。

今天是 2018 年 8 月 4 日，这天晚上，他过来跟我打招呼，他说，「Hi，Michel，我明天要走了，搬到另外一个院子。」我有点儿惊讶，然后才意识到他已经住了一个月，今晚是最后一晚。我邀请他到大厅小酌一杯，他欣然接收了。这是我俩第一次一起喝酒，算是相互道个别吧。他住在我们旅舍的这一个月，我也曾多次邀请过他，和我们旅舍的另外几个好友一起小酌几杯。有过两次，他坐下同我们聊天，但只是喝点白开水，拒绝喝酒，他说他还要工作。我劝道，喝酒会带来灵感。他坚持不喝酒。今天晚上，他没有拒绝，不过坚持只喝一杯，他说他还要工作。从日常的言行来看，John 有很强的自控能力。我有一次进过他的房间，所有的个人物品都摆放的井井有条。

我俩从什么话题开始聊的？我记不太清了。我记得我问了一句，你为什么一直呆在中国？他说，中国很好，是他停留过的国家中最好的国家。于是就有了我俩接下来的聊天。

------

我：真的吗？为什么你会觉得中国好呢？

他：我在很多国家生活过，美国，欧洲，然后到了亚洲，到了中国。中国政府做的非常出色，这里的人民有工作，治安也很好，中国政府是做的最好的。（我可以肯定，他用了最高级。）

我（感到疑惑）：我没有去过别的国家，我希望自己有一天能够到别的国家看看，欧洲，美国，包括你的国家，他们对我来说是非常陌生的。我不知道别的国家是什么样子，但我觉得，我的国家，中国，也许并没有那么好。我希望它更好。

他（知道我的疑惑，在中国这么长时间，肯定也和其他中国人聊过类似话题）：在美国，有上百万的流浪汉，他们一无所有，无家可归，是的，无家可归。不仅仅只是黑人，包括白人。但是美国政府没做任何事情，没做任何事情。的确，如果你有钱，你可以过得很不错。但是如果你没有钱（一副厌恶的表情，后面的话他没说）。在印度，印度和中国很像，一样有很大的面积，一样有很多的人口，但是在印度由于……

我：等级。（我不知道怎么说种姓制度。）

他：是的，等级。印度很富有，不过贫富差距非常非常的大。有很多人一无所有，受人歧视，但是他们的政府，没做任何事情。在中国不一样，中国人更平等，中国政府做了很多事情，是的，中国政府是最出色的。

我：会不会因为你是外国人，所以你觉得在中国挺好。

他：不。在别的国家我也是外国人。我所说的是我看到的。

我：我的英语不太好。一般日常交流没有问题，但是如果想要谈的更深入的话，有很大困难。

他：你的英语挺好的，只是你不常说。

我：我感到困惑。在我们国家实际存在着很多问题，有很多人批评政府，包括一些共产党员，也对自己的政府不满。与你说的恐怕相反。

他：我知道，我知道。我有很多中国朋友，他们总是说，美国，美国，美国巴拉巴拉，但是他们从来都没有去过美国。我在美国生活过，我知道那儿是什么样。还有一些欧洲的小国家，他们的政府治理的很好，但他们只有几百万人口。

我：相当于中国一个城市的人口。

他：所以他们政府的工作相对要轻松的多。

我：你是诚实的吗？（我想说的是，你说的是实话吗？）

他（笑了笑）：我说的是实话。我第一次来中国是在三十几年前，之后来来去去好几次，在中国过的很舒服，就是因为中国好，所以我才一直过来，然后长期生活在中国。有些国家，短期过去旅行还不错，要是在那生活，我不喜欢。我过去在贵州遵义做老师，做了很多年。那儿的茅台很好喝，就是有些烈。这个酒 [fn:1] 不错（举起他的杯子），干杯。

[fn:1] 本地的鹤庆大麦酒，入口有些甜，我们旅舍的日常口粮。:-)


我（举起我的杯子）：干杯。过去，老一辈中国共产党人长征的时候路过遵义，喝了那的酒，觉得特别好喝。后来他们建立了这个国家……

他：他们想念那儿的酒。

我：是的。然后，茅台就出名了。

咱俩开怀一笑。我给他添酒。他拒绝了。

他：我在遵义做了几年的老师，后来有段时间这个城市越来越大，人越来越多了。你知道，人多了就嘈杂，然后我就来到了云南。贵州的朋友一直希望我回去，我不回去，我不喜欢大城市。尽管说大城市生活很便利。

我：哈哈，我也不喜欢大城市，所以我来到了这儿。

他：这儿非常好，我非常喜欢你的旅舍，而且这儿的人都很不错。你找对了地方。前几年我在大理，现在大理也变得嘈杂了。我需要在安静的地方工作。（他看了看他的空杯子，笑了笑）也许我该上去工作了。

我：好的。明天你就要走了，如果有时间，欢迎经常过来坐坐。

他：谢谢你的酒，谢谢这里的一切。我会过来的。

我：祝你工作顺利！

------

*后记：* 这是我跟 John 第一次单独交流，以上内容是我第二天凭记忆记录下来的，肯定有疏漏和不太准确的地方。我在旅舍接触过不少来自不同国家的外国人，一起聊过政治，谈过对中国的看法，John 是我第一次接触到的去过很多国家，并且如此盛赞中国政府的外国人。有的长期生活在中国的老外，也许因为漂亮的姑娘留在中国，也许因为低廉的消费留在中国，但 John 似乎是个特例。鉴于我英文水平有限，沟通上始终存在障碍，所谈论的话题无法深入，仅限于闲聊。期待和他的下一次对话。


** DONE 月底去了一趟沙溪古镇                  :@在路上:旅行:沙溪古镇:农村:教育:
   CLOSED: [2018-08-31 Sun 19:00]
   :PROPERTIES:
   :EXPORT_FILE_NAME: shaxi-oldtown-5
   :END:
{{< figure src="/image/shaxi-oldtown/00.jpg" title="沙溪古戏台 2018 年 8 月" >}}

八月月底，旅客渐少，我搭沙溪刘哥的顺风车去了趟沙溪古镇。没记错的话，这是我第五次去沙溪。曾经有一次我在这个古镇呆了有两个月，它对我来说是个既熟悉又陌生的地方。听说，沙溪现在开了有三百多家客栈，而在我第一次来沙溪的六年前，那时候还只有十几家。现如今，很多曾经在沙溪认识的朋友都已经不在沙溪了。

<!--more-->

一件高兴的事是，我和喜咪一家在沙溪又碰面了，并且一起愉快的游玩了两天。喜咪一家三口八月份在我们旅舍住了半个月左右，由此相识。喜咪是一个八岁的小女孩儿，她在学校上了一个学期，她的父母觉得学校的教育有问题，就领回家由他们自己来教育。今年，他们开车出来旅行，在路上边玩边学，至今已经半年多了。一家人都非常的友善，与他们相处也非常的愉快。喜咪的父亲袁哥是个很有学识的律师，读了很多的书，与他聊天带给我很多的启发。

{{< figure src="/image/shaxi-oldtown/06.jpg" title="与喜咪合影" >}}

我抵达沙溪的第一晚，约了袁哥碰面，到马圈青旅小酌几杯。第二天一起去了趟白龙潭，晚上吃乡亲们才从山上摘来卖的新鲜松茸。第三天一起去了石宝山的宝相寺和石龙村，晚上在村上偶遇的张哥家中吃饭，相谈甚欢。第四天返回白沙。

这几天聊到的两件值得记录的事情：

一、马坪关村民的小学教育问题。当地政府撤了马坪关唯一的一所小学（设有一、二、三年级），将这所小学唯一的一位老师迁至另外一所学校。一位马坪关的朋友说，「现在孩子们从一年级就要到沙溪古镇的完小住校，孩子太小了，生活根本无法自理。本来是到了四年级，孩子们长大一点再住校，稍微会好一些。村民们的家和土地都在马坪关，如果为了陪同孩子到沙溪上学，不仅仅要交房租，连收入来源都没了。」我不清楚关停马坪关的学校，是因为师资力量不够，还是因为村里上学的孩子太少，此事让我了解到山区农村的教育存在很多问题，这应该只是边山一角。不知道当地政府会如何处理这种情况，还是说就那样不管了。

二、石龙村张哥家。张哥是石龙村卫生所的一位医生，大专毕业，是位有文化的村民。平时工作忙碌，但是收入微薄，据他说，在公共卫生服务方面，国家每个月的补助仅几百元。石龙村靠近石宝山景区，他们家院子不小，我们建议他们可以装修几间房弄个客栈，每年旺季的时候也能挣些外快。至于他会不会采纳，来年再问问他吧。

{{< gallery >}}
  {{< figure src="/image/shaxi-oldtown/01.jpg" title="我在白龙潭边" >}}
  {{< figure src="/image/shaxi-oldtown/02.jpg" title="戏台前的大树" >}}
  {{< figure src="/image/shaxi-oldtown/03.jpg" title="玉津桥 2018 年 8 月" >}}
  {{< figure src="/image/shaxi-oldtown/04.jpg" title="东寨门" >}}
  {{< figure src="/image/shaxi-oldtown/05.jpg" title="古镇的石板路" >}}
  {{< figure src="/image/shaxi-oldtown/07.jpg" title="宝相寺的国旗" >}}
  {{< figure src="/image/shaxi-oldtown/08.jpg" title="张哥家地里的土豆" >}}
  {{< figure src="/image/shaxi-oldtown/09.jpg" title="在张哥家吃饭" >}}
{{< /gallery >}}



** DONE 英语学习方法总结 —— 2018 年 9 月         :@计划:英语:方法:反思:总结:
   CLOSED: [2018-09-28 Fri 22:38]
   :PROPERTIES:
   :EXPORT_FILE_NAME: plan-english-2018
   :END:

本篇文章旨在对自己的英语学习方法做一个总结。

*** 我的目标
#+BEGIN_QUOTE
所以对于所有想提高英语的同学，我给大家的建议是，在人云亦云的决定提高英语之前问自己这样几个问题：你真的真的需要提高英语吗？你真的没有比学习英语更好的提高自己的方式了吗？你真的想提高英语吗？你打算付出多少代价？你打算坚持多久？你打算在你其它事情都已经忙不过来的时候还在练英语吗？你打算在你坚持了好久似乎也没什么进步之后还坚持吗？

作者：塔尔盖

链接：[[https://www.zhihu.com/question/37174334/answer/71679688][在中国，英语流利能给个人带来多少额外的收益？ - 知乎]]
#+END_QUOTE

首先需要明确的是，我需要提高自己的英语水平。

1. 工作方面：在旅舍有接待外国人的需要，时常感到有沟通障碍。
2. 学习方面：我的主要兴趣——「计算机」，大部分杰出的书籍，以及技术文档，主要都是英文。
3. 绝大多数前沿的知识理论以英文为主。
4. 通过英语，可以在互联网上找到更多优质的信息。

简单来说，我希望通过提高自己的英语水平，从而能够获取更多的信息。


*** 单词
- [[https://www.runningcheese.com/vocabulary][学霸们都在用的背单词方法，词汇量20000不是梦 | 奔跑中的奶酪]]
- [[https://www.douban.com/note/552372302/][如何迅速积累两万词汇量并流畅阅读经济学人？]]
- [[https://www.douban.com/note/278501822/][奶爸1.6G Mdict词库的补充及在Bluedict中使用的心得]]
- [[https://www.douban.com/note/265113899/][听说今天是学雷锋纪念日2？——Mdict词库]]

我在 15 年的时候特意下了一些工夫来背单词，当时用的 app 是「百词斩」，差不多每天背 100 个左右的单词。词汇量有了明显的提升，记住了很多常用的单词，可以阅读一些难度不高的书籍了，比如 《The Old Man and the Sea》《The Little Prince》，以及可以阅读一些计算机技术类的书籍。后来慢慢感觉遇到了瓶颈，那些出现频率不高的词汇如果只是用「背单词软件」的话很难记住。当时我想的是通过阅读来提高词汇量，奈何没有做好规划，简单的书看着没什么意思，有意思的书读起来又有比较大的障碍，进步很缓慢。

现在反思起来，提高词汇量还是要两种方法同时进行，「背单词提高词汇量」和「阅读提高词汇量」。目前我的词汇量在 6000 左右，通过对比和试验，奶爸整理的「经济学人词频」拿来背诵也许更适合自己。关于使用的词典，直接借鉴奶爸的建议：

#+BEGIN_QUOTE
新手： 科林斯双解-韦氏高阶-朗文当代5-剑桥高阶

中手： 朗文当代5-韦氏高阶-剑桥高阶

中高： 牛津简明-ODE-AHD-韦氏新世界-朗文当代 

高级： AHD-韦氏大学-ODE-兰登韦氏-SOED。
#+END_QUOTE

**** 手机端词典软件——欧陆词典
1. 可以导入大量词库。
2. 可以用来背单词。
3. 在阅读中遇到的生词可以加入生词本进行复习。

总之，这是一款在手机上非常好用的词典软件。奈何电脑端没有，目前自己电脑端使用的是 GoldenDict 。

**** 记忆词根、词缀
英语中的词根、词缀跟汉语的偏旁、部首相类似，掌握词根、词缀的含义，应该会有助于增强单词的记忆。奶酪的那篇文章中已经列出了很多有价值的信息，可以经常回顾看一看。


*** 阅读
- [[https://www.runningcheese.com/reading][如何沉迷英语阅读无法自拔? | 奔跑中的奶酪]]
- [[https://www.douban.com/note/544585497/][英语原版书推荐 | 有哪些搞笑的原版书？]]
- [[https://fab.lexile.com/][Find a Book | MetaMetrics Inc.]] - 搜索英文书籍的蓝思值

关于提升自己英语阅读能力的方法，奶酪的文章中已经讲的很好了。我自己搜索了一下我曾经能够看的懂的英文书的「蓝思值」，我发现自己的阅读水平基本在 900L 左右。自己最近阅读的一本书 《Diary of a Wimpy Kid》 的蓝思值是 950L ，自己大概能够理解全文内容的 80% 。以蓝思值为标准，我计划接下来的阅读基于蓝思值在 900L 至 1000L 的书籍。

因为我主要使用平板来阅读电子书，暂时使用的 *标注方法* ：

- 红色，划重点。
- 绿色，划优美的句子。
- 黄色，划不易理解的句子。

*** 写作
- [[https://www.runningcheese.com/writing][英文写作没那么难，入门英文写作的一些小套路 | 奔跑中的奶酪]]

这个月，我尝试每天用英语写点东西，无奈遇到了一点问题：

1. 写了一些内容之后，不知道该写什么。
2. 发在 lang-8 上，没有人帮忙修改，没有反馈的练习是无效的！这也导致动力缺失。
3. 写不出来的时候会有挫败感，有点儿痛苦。
4. 基础不牢固，大多时候都需要使用谷歌翻译。

只能改变计划了，做另外的尝试。但必须明白，英文写作的重要性，它是直接输出获取反馈的最好方式。我在考虑花点钱找个老师帮忙修改，前提是自己能够写出内容。关于练习写作的计划，我需要再思考思考。

值得一提的是，用 git 来管理写作内容有很大的好处。比如在 Github 上可以直观的显示修改前后的对比：

{{< figure src="/image/other/plan-english-2018.png" title="" >}}


**** 关于语法
以前上学的时候没学好，表达的时候经常犯语法错误，口语交流基本都是蹦单词，只能慢慢「补课」了。

*** 其他
- [[http://testyourvocab.com/][Test Your Vocabulary]] - 测试词汇量
- [[https://lexile.com/][The Lexile Framework for Reading - Lexile]] - 查询蓝思值
- [[https://www.linguee.com/][Linguee | Dictionary for German, French, Spanish, and more]] 例句查询，支持中文

*** 计划 - 截止至 2018 年年底

**** TODO 背「经济学人-词频 500 次以上」的单词

**** TODO 阅读《200个一定要学的英文词根词缀》

**** TODO 阅读《英语词根与单词的说文解字》

**** TODO 阅读《英语魔法师语法俱乐部》

**** TODO 阅读《Diary of a Wimpy Kid》

**** TODO 阅读《To Kill a Mockingbird》

**** TODO 阅读《The Adventures of Tom Sawyer》

**** TODO 开通英文博客




** DONE 浅谈冥想（或者说正念）——反抗痛苦的方法 :@杂文:正念:冥想:痛苦:站桩:禅:练习:
   CLOSED: [2018-10-12 Fri 08:06]
   :PROPERTIES:
   :EXPORT_FILE_NAME: talk-about-mindfulness
   :END:

这一年多，「冥想」对我的帮助非常大。主要体现在：

1. 减少了我的「痛苦」。
2. 降低了我的「焦虑」。
3. 提高了我的「专注力」。

另外，从实际行动层面：

1. 我开始了我的博客，尽管目前有价值的内容还不是很多。
2. 我开始真正使用 Github 。

翻了翻邮箱，我曾经在三年前与 ZH 、 LM 两位老师多次谈过我的痛苦和焦虑，见 [[*附一：关于痛苦的一些信件摘录][附一：关于痛苦的一些信件摘录]] 。今年我的状态明显好了很多。

我想在这篇文章里， *简单谈一谈「冥想」* 。本着对读者负责的态度，有几点需要说明的：

1. 本篇文章只是我个人小小的分享。
2. 我个人真正「实践冥想」只是近一年左右的事情，我还是一个初学者，所分享的内容仅限于我 *个人的感悟和理解* 。
3. 我不是「利益相关者」，我的分享只是因为 *它对我有帮助* ，也希望对你有帮助。
4. 有关冥想、以及其疗效的严谨学术研究并不多。 [fn:1]
5. 不过呢，关于人体的奥秘，目前还有非常多科学无法解释的东西。

[fn:1] [[https://www.bbc.com/ukchina/simp/vert-fut-44140493][正念冥想是否被过度炒作了 - BBC 英伦网]] 


<!--more-->

*** 不妨先做一个 「1 分钟」的小实验
1. 找个位置坐下（也许你此刻正在坐着）。
2. 在手机上设一个「1 分钟」的闹钟。
3. 闭上眼睛， *将自己的念头专注于呼吸* 。
4. 「什么都别做，别去控制呼吸，也不要想用什么特殊的方式呼吸。只要观察现在的状况，不管状况如何。吸气的时候，你只是意识到，这股气进来了；呼气的时候，你只是意识到，这股气出去了。而等你不再专注，思绪开始在回忆和幻想中游荡的时候，你只是意识到：现在我的思绪不在呼吸上了。」 [fn:2]
5. 闹钟响起，实验结束。

[fn:2] 本段摘自《今日简史》第 21 章——重新认识自己：人类心智的奥秘


通过这个小实验你会发现什么？

至少对我而言，我在刚开始做冥想练习的时候，我 *很难将自己的念头只专注于呼吸* 。有很多的杂念不断的从我的思绪中飘过，我无法控制我的念头，就连简单的将念头只专注于呼吸都无法控制。

但是后来，通过一次又一次的练习，以及简单的技巧，我发现自己「专注于呼吸」的控制能力在不断加强。

*** 什么类型的人适合冥想？
我想聊一下我的个人背景，因为「痛苦」，我曾经希望通过阅读来给「痛苦的根源」、以及如何「消除痛苦」寻找答案。我看佛经，看圣经，看论语，看道德经，看曾国藩、尼采、叔本华等等，他们在不同方面给予了我启发，但简单说，对我而言， *也就是知道了一些文字、语言上的概念而已* 。王阳明说「知行合一」，可是很多事物和道理我知道了，就是无法践行。有人说是因为我知的太浅，可是我又怎样能够知的不浅呢？很多书告诉我， *要专注，是啊，我当然知道要专注，我也很想专注，可很多时候我就是做不到，我也不知道为什么。*

我不知道为什么自己自制力差；为什么自己总是拖延；为什么总是胡思乱想；为什么总是焦虑。

直到我接触了冥想（正念）。它是一项非常简单的「运动」，也有人说是「休息」 [fn:3] 。不过，我想说， *字面意思一点都不重要* ，重要的是，通过这项简单的小小的「行动」，它给自身带来的实质上的改变。

[fn:3] [[https://sspai.com/post/44540][精力记录与科学休息法 - 少数派]]


值得一提的是，回想起来， *我从小就是一个不够专注、自制力差的人* 。小时候沉迷于网络游戏，暑假作业总是拖到假期最后两天才做，做点什么事情总是三分钟热度，等等。这也许跟家庭教育有点关系。有一些受过良好家庭教育的孩子，做事有规划，执行力强，能够抗拒各种诱惑，很有可能是因为他们从小就受到了很好的「正念训练」。我的个人看法是， *「正念训练」没有什么神奇、玄妙的地方。一个受过一段时间枯燥乏味的，比如说「写字」、「弹钢琴」等等练习的人，实际上很有可能都在不知不觉中练习了自身的「专注能力」，锻炼了自身的「正念」* 。

如果你跟我一样，从小并没有受过类似的训练，感觉自己专注能力差，时常感到焦虑和痛苦，也许你可以试一试练习冥想。当然，每个人都有自己的方式去修心，比如有的人通过跑步，有的人通过写字，有的人通过念诵经书等等，也许都可以达到同样的目的。只不过，我的看法是， *冥想是最简单的修心方法* 。

*** 为什么说「冥想是最简单的修心方法」？
1. 无论任何时间、任何地点都可以进行练习。
2.  *不需要借助任何外部工具。*

另外，做「冥想」这件事没有任何负担。此话怎讲？我尝试过一段时间跑步，跑步能够使我愉悦，但是因为各种原因，比如有点儿累、天气不好（丽江的雨季是很漫长的）等等，就不跑了，不跑之后呢，就中断了。中断之后也许很久都没再跑步。

但是冥想不一样。说来惭愧，我在 4 月 17 日的一篇博文 [[http://www.xianmin.org/post/exercise01/][《恢复锻炼，站桩日志》]] 中谈到，要恢复锻炼，连续 100 天站桩（站桩在我看来也是冥想的一种姿势），可实际上我根本就做不到。

不过呢，跟跑步不同的是，当我想要去站桩的时候，我随时可以去站桩，没有额外的负担。就算我一周都没有站桩了，我突然有一天感到心烦意乱，那么我首先想到的是，我要站桩去了。通过将念头专注于一呼一吸之间，这会让我的内心感到平静。根据我自己的记录，从 4 月 17 日至今，我断断续续站了 61 次，平均大概每 3 天一次。本篇文章也算是对自己这半年的站桩体验做个小结吧。


*** 怎样冥想？
上文中，「1 分钟的小实验」已经说了一个很简单的方法，即「专注于呼吸」。这里我分享一下我个人的训练技巧—— *数呼吸* 。我一般先用手机定一个半小时的闹钟，然后开始冥想，将自己的念头专注于呼吸，开始数呼吸。一呼一吸，心中默默的数 1 ，再一呼一吸，数 2 ，这样子继续。

一个方法是： *从 1 数到 10 ，再从 1 数到 10 ，如此循环。*

还有一个方法是： *从 1 一直数到结束。*

我自己的感悟如下：

1. 在我不知道数呼吸的方法之前，我尝试过「假睡」，或者任由自己胡思乱想，这两种方式根本做不到平静自己的内心。并且， *我明显的感觉到时间非常的难熬，只想着尽早结束，事实上有好几次我也真的就直接结束了* 。
2. 数呼吸的方法我是在《正念的奇迹》中得到的启发。在刚开始使用这个技巧的初期，我不断地重复从 1 数到 10 ， *然后莫名其妙，思绪就不知道到哪儿去了* 。等我意识到的时候，我又重新开始从 1 数到 10 。这种感觉很有意思，我自以为能够专注的做「从 1 数到 10 」这件简单的事，可实际上，我无法控制我的思绪往别处想，就连数到哪儿都忘了。
3. 经过一段时期的锻炼之后，冥想半个小时对我而言算是比较轻松的事儿了，没有了「想要尽快结束」这个念头。思绪还是时不时会往别处想，但我很快就能意识到。

*** 关于冥想的姿势
提到冥想，很多人也许首先想到的是打坐。关于打坐的姿势，以及注意事项，自己上网搜吧，选一个自己感觉舒服的姿势就可以了。我打坐的次数不多，就不多说了。

前文有提到，我一般都是站桩，这是机缘巧合跟一位老师学的。关于站桩，网上也能搜的到相关资料。有一段时间，我差不多有一个月每天长时间的坐在电脑前，导致腰酸、脊椎疼。直到有一天实在受不了了，才去站桩。站了三天，慢慢就恢复了。我刚开始练习站桩的时候，很难坚持，腿抖得厉害，臂膀酸痛，一度想要中断。也许刚开始打坐也会有类似的症状，腿麻，浑身不舒服。 *可是经过一段时间的训练，那种不舒适感会慢慢的消失。*

我在初期，每次站桩都是觉得身体不太舒服了才会去站。现在站桩对我而言，反倒是练习正念的一种方式。

*** 关于冥想和正念的区别
在我看来，没什么区别，只是同一件事的两种不同的叫法而已。但是冥想呢，似乎是需要刻意去做的一件事，比如「我要去冥想了」，正念的含义感觉上就更宽泛一些。有「每时每刻都保持正念」这样的说法，如果说「每时每刻都保持冥想」就感觉有些奇怪了。

语言的表达是有局限性的，我们都知道「痛苦」是什么，可是你真的能把「痛苦」这样的心理状态解释清楚么？我们只是知道，此时此刻，这样的感觉是痛苦。同样，当你感受到了「正念」，你也就会知道，哦，这就是正念。当你胡思乱想、心烦意乱、控制不住自己情绪的时候，你就会知道，哦，我失去了正念。

*** 结束语
正巧，最近翻了一本书叫《今日简史》，有意思的是该书的作者在最后一章也谈到了「正念对他产生的好处」。

就摘录他书中的两段话作为结束吧：

#+BEGIN_QUOTE
我在青少年时期有许多烦恼，心静不下来，觉得整个世界莫名其妙，对于人生的种种大问题也都找不到答案。特别是我不明白为什么有诸多苦痛充斥着整个世界，充斥着我的生活，也不知道自己对此可以做些什么。不论是身边的人或是读到的书，讲的都是一些精心虚构的故事：关于神和天堂的宗教神话，关于祖国和历史使命的民族主义，关于爱情和冒险的浪漫神话，还有那套说着经济增长、消费能让我开心的资本主义神话。虽然我当时已经能够意识到这一切可能都是虚构的，但还是不知道怎样找出真相。

......

我从观察自己呼吸所学到的第一件事是：虽然我读了那么多书，在大学上了那么多课，但对自己的心智几乎一无所知，而且根本没什么办法控制心智。无论我怎么努力，还是会想到别的事情，专心观察气息如何进出鼻孔的时间怎样也撑不过10秒。多年来我一直以为自己就是我人生的主宰，是我个人品牌的首席执行官，但禅修不过短短几小时，就足以证明我对自己几乎没有任何控制的能力。我非但不是首席执行官，就连当个看门的也不太够格。虽然我只是站在自己身体的大门（鼻孔）旁，观察一下有什么进来、有什么出去，但没一会儿我就擅离职守了。那真的是一次让我大开眼界的经历。
#+END_QUOTE


*** 附一：关于痛苦的一些信件摘录
ZH 、LM 是我 14 至 15 年在深圳工作期间，我的两位老板，同时也是我的兄长和老师。那是我第一次，也是唯一一次从事 IT 相关的工作，他们给予了我很多工作和学习上的帮助。从深圳离职，回到丽江后，给他们写过几封信。重新翻阅当时的信件，15 至 17 年间，我多次处于焦虑和痛苦当中。以下摘录些许片段：

**** 2015 年 6 月 15 日 - 反思了几件事
焦虑、着急、痛苦、浮躁，这种循环的情绪这些年一直困扰着我，在公司的时候一样，回到白沙这边也一样。不过在这儿的好处是可以到自然中走走，中和一下负面情绪。而在深圳的时候，我常感到无从释放。为什么会这样？也许是因为挫败感大于成就感吧，长期如此，能力达不到自己的期望。一无所有、一无所长同样令我痛苦。更痛苦的是，我无法明确（不够坚定，总是质疑）自己真正想要擅长什么，真正想要什么。这么长时间以来，我的所思所想所学，一直处于玩票的性质，思考的，根本就不是实际的问题。这里看看，那里看看，好像是看了很多，实际上接触的仅仅都只是九牛一毛。当初没上大学是我个人决定的，家人非常失望，尤其是我父亲，好像总有一种无形的压力，就是如果我没有任何建树，那么就证明我当时的选择是错误的。我也因此而始终没有放弃，但同时又一直焦虑着。

**** 2015 年 7 月 4 日 - 近况
我听说、以及在网上看到，很多顶尖学校毕业的，到欧美去了，一流学校毕业的到大城市去了，似乎都在往更高处爬，都在追求更高的生活品质，至于最高点在哪儿，我不知道。这是我最近思考的一个问题。城市越发展，经济越繁荣，生活理应更轻松，但现实是，越大的城市，生活节奏和压力反倒越大。这是我的一个疑问。还有一个疑问是，科技进步给予人幸福了吗？对于这两个疑问，即使否定，结果也必然是不断发展和进步的。我想，人与人的追求不同，关键还是得知足吧，烦恼往往来源于欲求得不到满足。

**** 2015 年 9 月 21 日 - 关于痛苦
查看了一下，上次收到 LM 老师的回信是 7 月 26 日，距今快两个月了，而距我上次给你们写信也有两个半月了。这段时间，经历了一些事情，自己一直被痛苦的阴霾困扰着，喝了很多很多的酒，也因此一直没有给你们写信。 7、8 月份是旅舍的旺季，有点儿忙，到 9 月份就闲下来了。即便喝酒，很多话也找不到人去交流。可以喝酒的人很多，但是能有共同语言的就很少很少了。有些话可以对你们说，如果你们愿意倾听，对我而言是多么荣幸的事啊！

先说说为何而痛苦？我醒悟到，活着本身就是操蛋的痛苦的，这是不可避免的，而我前段时间一直在痛苦的寻找痛苦的根源。

**** 2015 年 9 月 27 日 - 谈谈志向
亲爱的 ZH 老师、 LM 老师：

你们好！中秋节快乐！

这一封信接上一封未说完的，我想与你们聊聊我的志向。

前阵子读了一本书，《朱子学提纲》，朱子说道：“学者须以立志为本”，他还说：“世间千歧万路，圣人为甚不向别路去，只向这一路来，志是心之深处”，“读不记，熟读可记。义不精，细思可精。惟有志不立，直是无着手处“。如上封信所说，当时的自己正在痛苦中，而这几句话，更是直击了内心的痛处！

......

我与你们说这些，是希望与你们分享我的改变和喜悦。在上封信中也提到，你们愿意倾听，对我而言是非常荣幸的事！这个改变源于我明确了自己对世界和对个人的认识，即我活在这个世界上必然是痛苦的，一切美好都来自于痛苦的消亡，痛苦的消亡需要反抗。我希望在这个痛苦的人世中创造一点美好的东西。这些话听上去比较扯淡，但对我个人而言，它给予我信念，并充满了力量。就好像一切都有了一个终极答案——反抗痛苦（例如，人为什么活着？活着的意义是什么？就是为了反抗痛苦。）。正如 ZH 老师所言，它是我的亚历山大之剑，也将是我的人生信条。回首往昔，从 10 岁开始，我就长期被各种痛苦困扰着，而我至今还能怀有一颗希望的心，也正是在不断的反抗。这似乎是自然而然的，只是我现在更能理解痛苦，正视痛苦，不再觉得痛苦有多么可怕了！就像此刻，我与你们谈论我的志向，“达不成”对我而言也不算可怕的事了，痛苦是必然的，只能反抗。

**** 2017 年 1 月 20 日 - 抱歉！年前无法赴约去深圳了！
亲爱的 H 哥、 M 哥：

你们好！
许久没怎么联系了，不知近来可好？

H 哥前些日子邀我年前到深圳小聚，我考虑了很久，这次还是不过去了。我这两个月几乎每天都在喝酒，目前已经形成了严重的酒精依赖，不喝酒就睡不着觉，精神状态恐怕不太好。在旅舍应付各种朋友聚会，尽管当时是把酒言欢，事后多少有点儿身心疲惫。还好是在乡下，没有多大的外界压力，当我想到，要是走进大城市面对人群，内心还是会感到焦虑、恐慌。所以，很抱歉，这次不能赴约前往了。来日方长，我一直都记挂着两位兄长，另寻他日我再登门拜访。

我将在 25 日乘坐火车回老家，见见家人，处理一些事情，计划在老家休养几日。

其他事儿，也不知说什么好（脑子有点儿乱），就这么结尾吧。

预祝春节愉快！祝一切安好！

贤民


*** 附二：其他值得看的资料
- [[https://book.douban.com/subject/4726852/][正念的奇迹 (豆瓣)]] - 本书中提到了更多的修习正念的方法。
- [[https://v.youku.com/v_show/id_XMzM4NTU3Njk0MA==.html?spm=a2h0k.11417342.soresults.dtitle][香港大学一行禅师讲座—教育—视频高清在线观看-优酷]]
- [[https://v.youku.com/v_show/id_XMTQxMzIxOTg4OA==.html?spm=a2h0j.11185381.listitem_page1.5!79~A&&s=7c87f1ae8e6311e5b522][梁文道 第七十九夜 般若波罗蜜多心经（一）—综艺—视频高清在线观看-优酷]]



** DONE 从泸沽湖到宝山石头城                           :@在路上:泸沽湖:记忆:
   CLOSED: [2018-11-30 Fri 15:20]
   :PROPERTIES:
   :EXPORT_FILE_NAME: 2018-lugu-lake
   :END:
在丽江待了这么多年，却一直没有去过泸沽湖。原因嘛，无非是我不喜欢去景点，尤其是大家都去的景点。我的偏好是，要么在路上，要么就在一个地方待着，逛景点也就是看看风景，有时候路上的风景或许比景点更美呢。

不过这个月月底，终于还是去了一趟泸沽湖，顺带还去了宝山石头城。这次比较特殊的是和几个熟悉的朋友一同出行，实在难得，一块儿吃喝玩乐，聊聊生活，增进一下友谊。

{{< figure src="/image/lugu-lake/00.jpg" title="泸沽湖边飞翔的鸟儿" >}}

<!--more-->

*** 1
 第一晚，住在泸沽湖的一家青旅——湖思茶屋。我才知道，这家青旅已经开了 20 年了！更令我想不到的是，他们的留言本从 1998 年至今，已经写了几十册，保留完好，这不就是「植物的记忆」吗？因为时间有限，我只是翻看了部分 2000 年左右的文字，那时的人连 QQ 都还不怎么用，很多人留下的是自己的邮箱。他们的字写的真是好看，充满了美好、温暖的话语，没有一丝半点的浮躁。到今天，估计当初留言的人都已经 50 岁左右了吧，他们还好吗？当时，中国物价不高，有很多日本人来中国旅行，在本子上有大量的日文留言，这些外国人，现在又在哪儿呢？时间过的真快，世界也变化的真快。泸沽湖变得繁华了，交通也比过去便利了很多，不必再坐 8、 9 个小时的长途客车了。

 不知道自己感慨些什么，或许是被那些用纸和笔所记录下的文字感动了吧，它们承载的是一段段鲜活的普通人的历史记忆。如果再去一趟泸沽湖，我就待在青旅，把他们的留言本翻完。

 联想到自己现在「记录记忆」的这个博客，也不知道，20 年后，它会在哪儿呢？

少一点儿浮躁吧，不必任何事情都要追求有用。

*** 2
从泸沽湖离开，去了宝山石头城，一路都是弯弯曲曲的盘山公路。除了走盘山公路，另外得到了一个信息，可以从「阿海水电站」坐船沿金沙江北上抵达石头城。坐船或许会是一个非常有意思的选择，可以欣赏金沙江沿岸的景色。

从宝山石头城到泸沽湖，有一条非常经典的徒步路线，我一直想走却因为各种原因没走成。留待下次了。

三天两晚，旅途结束。

{{< gallery >}}
  {{< figure src="/image/lugu-lake/01.jpg" title="" caption="" >}}
  {{< figure src="/image/lugu-lake/02.jpg" title="" caption="" >}}
  {{< figure src="/image/lugu-lake/03.jpg" title="" caption="" >}}
  {{< figure src="/image/lugu-lake/04.jpg" title="" caption="" >}}
  {{< figure src="/image/lugu-lake/05.jpg" title="" caption="" >}}
  {{< figure src="/image/lugu-lake/06.jpg" title="" caption="" >}}
  {{< figure src="/image/lugu-lake/07.jpg" title="" caption="" >}}
  {{< figure src="/image/lugu-lake/08.jpg" title="" caption="" >}}
  {{< figure src="/image/lugu-lake/09.jpg" title="" caption="" >}}
{{< /gallery >}}


* 计算机

** TODO Linux 下，使用 Linuxbrew 安装更多的软件
[[https://brew.sh/][Homebrew]] 是 MacOS 下的一个包管理工具，大部分使用 Mac 的开发者对它应该很熟悉了。[[http://linuxbrew.sh/#features][Linuxbrew]] 是 Linux 下的 Homebrew ，使用它，就可以用 =brew install= 安装更多的软件。也许有人要问，各个 Linux 发行版都已经 *自带了「包管理工具」* ，为什么还要多此一举，用 Linuxbrew 呢？

*** 为什么用 Linuxbrew ？
1. 将软件安装在用户目录下，无需使用 sudo 。
2. 获取更多软件资源，安装最新版本的软件。
3. 保持 linux 系统环境的整洁。

*我举一个我最近使用的一个例子：*

我要安装 [[https://yarnpkg.com/zh-Hans/][Yarn]] ，系统仓库的版本太低，如果 [[https://yarnpkg.com/zh-Hans/docs/install#debian-stable][按照官网的步骤安装]] ，则太过繁琐。而使用了 Linuxbrew ，只需要一条命令 =brew install yarn= ，就安装好了。

*** Linuxbrew 的安装
参照官网。

1、 执行命令：

#+BEGIN_SRC bash 
sh -c "$(curl -fsSL https://raw.githubusercontent.com/Linuxbrew/install/master/install.sh)"
#+END_SRC

2、 添加 PATH 路径（比如我的，添加到 =.zprofile= 文件）：

#+BEGIN_SRC bash
export PATH="/home/linuxbrew/.linuxbrew/bin:$PATH"
export MANPATH="/home/linuxbrew/.linuxbrew/share/man:$MANPATH"
export INFOPATH="/home/linuxbrew/.linuxbrew/share/info:$INFOPATH"
#+END_SRC


