<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on 轨迹的印痕</title>
    <link>https://scallee.github.io/blog//post/</link>
    <description>Recent content in Posts on 轨迹的印痕</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Mon, 17 Jun 2019 10:03:42 +0800</lastBuildDate>
    
	<atom:link href="https://scallee.github.io/blog//post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Redis Cluster Conf</title>
      <link>https://scallee.github.io/blog//post/redis-cluster-conf/</link>
      <pubDate>Mon, 17 Jun 2019 10:03:42 +0800</pubDate>
      
      <guid>https://scallee.github.io/blog//post/redis-cluster-conf/</guid>
      <description>&lt;p&gt;redis集群简单设置脚本&lt;/p&gt;

&lt;p&gt;未完成&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>SpringBoot使用读写分离数据源</title>
      <link>https://scallee.github.io/blog//post/springboot%E4%BD%BF%E7%94%A8%E8%AF%BB%E5%86%99%E5%88%86%E7%A6%BB%E6%95%B0%E6%8D%AE%E6%BA%90/</link>
      <pubDate>Sun, 16 Jun 2019 21:44:38 +0800</pubDate>
      
      <guid>https://scallee.github.io/blog//post/springboot%E4%BD%BF%E7%94%A8%E8%AF%BB%E5%86%99%E5%88%86%E7%A6%BB%E6%95%B0%E6%8D%AE%E6%BA%90/</guid>
      <description>&lt;h2 id=&#34;springboot使用读写分离数据源&#34;&gt;SpringBoot使用读写分离数据源&lt;/h2&gt;

&lt;p&gt;本文来源：&lt;a href=&#34;https://springboot.io/t/topic/49&#34;&gt;https://springboot.io/t/topic/49&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;网站应用的瓶颈大多在DB，DB的性能直接的决定了网站的负载能力。一般的b/s应用。读请求数量大于写请求，于是可以通过读写分离来把读请求负载到多个数据源中（一主N从）。在并发过大的时候，读写分离就能为应用带来一定的性能提升。
读写分离不是特别复杂的技术，可以通过中间件或者自己编码实现。可幸&lt;code&gt;Spring&lt;/code&gt;框架已经提供了动态数据源的这种机制&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>Centos7安装jdk脚本</title>
      <link>https://scallee.github.io/blog//post/centos7-install-jdk-sh/</link>
      <pubDate>Sun, 16 Jun 2019 21:16:32 +0800</pubDate>
      
      <guid>https://scallee.github.io/blog//post/centos7-install-jdk-sh/</guid>
      <description>&lt;p&gt;Centos7 安装JDK 版本jdk1.8.0_161&lt;/p&gt;

&lt;p&gt;什么都不说，直接上代码&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Redis Cluster Start</title>
      <link>https://scallee.github.io/blog//post/redis-cluster-start/</link>
      <pubDate>Sun, 16 Jun 2019 20:58:58 +0800</pubDate>
      
      <guid>https://scallee.github.io/blog//post/redis-cluster-start/</guid>
      <description>&lt;p&gt;Redis集群Cluster模式启动脚本&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Firewall</title>
      <link>https://scallee.github.io/blog//post/firewall/</link>
      <pubDate>Sun, 16 Jun 2019 20:42:05 +0800</pubDate>
      
      <guid>https://scallee.github.io/blog//post/firewall/</guid>
      <description>&lt;h4 id=&#34;1-firewalld的基本使用&#34;&gt;1、firewalld的基本使用&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;启动： systemctl start firewalld&lt;/li&gt;
&lt;li&gt;查看状态： systemctl status firewalld&lt;/li&gt;
&lt;li&gt;停止： systemctl disable firewalld&lt;/li&gt;
&lt;li&gt;禁用： systemctl stop firewalld
 &lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>Linux命令</title>
      <link>https://scallee.github.io/blog//post/linux%E5%91%BD%E4%BB%A4/</link>
      <pubDate>Sun, 16 Jun 2019 19:42:41 +0800</pubDate>
      
      <guid>https://scallee.github.io/blog//post/linux%E5%91%BD%E4%BB%A4/</guid>
      <description>&lt;h3 id=&#34;linux-命令&#34;&gt;Linux 命令&lt;/h3&gt;

&lt;h4 id=&#34;ls-和-ll-的使用方法&#34;&gt;&lt;code&gt;ls&lt;/code&gt; 和 &lt;code&gt;ll&lt;/code&gt;的使用方法：&lt;/h4&gt;

&lt;p&gt;&lt;code&gt;ll&lt;/code&gt;：罗列出当前文件或目录的详细信息，含有时间、读写权限、大小、时间等信息，
像Windows显示的详细信息。可以理解为 ll 和 ls -l 的功能是相同的.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Centos7 安装Hugo</title>
      <link>https://scallee.github.io/blog//post/centos7-install-hogo/</link>
      <pubDate>Sun, 16 Jun 2019 19:22:05 +0800</pubDate>
      
      <guid>https://scallee.github.io/blog//post/centos7-install-hogo/</guid>
      <description>&lt;h3 id=&#34;安装hugo&#34;&gt;安装Hugo&lt;/h3&gt;</description>
    </item>
    
  </channel>
</rss>